{
  "contractName": "EtherReceiverMock",
  "abi": [
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "acceptEther",
          "type": "bool"
        }
      ],
      "name": "setAcceptEther",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"acceptEther\",\"type\":\"bool\"}],\"name\":\"setAcceptEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/src/contracts/openzeppelin-contracts-4.1.0/openzeppelin-contracts-4.1.0/contracts/mocks/EtherReceiverMock.sol\":\"EtherReceiverMock\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/src/contracts/openzeppelin-contracts-4.1.0/openzeppelin-contracts-4.1.0/contracts/mocks/EtherReceiverMock.sol\":{\"keccak256\":\"0xd00a024a92862aac28ea4bcf2b5418c6ce43ae1f7b99b4553d6185243c9fc269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f67545e3d095efcab196077772e20f64e83183eed7016a399d5839bed282d69\",\"dweb:/ipfs/QmfVHi6AEQkuKLdrLpA2U84bTJx99wX87drbCJ7hiZmq7i\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610116806100206000396000f3fe608060405260043610601f5760003560e01c80634fea120c14604057603b565b36603b5760008054906101000a900460ff16603957600080fd5b005b600080fd5b348015604b57600080fd5b5060626004803603810190605e919060b8565b6064565b005b806000806101000a81548160ff02191690831515021790555050565b600080fd5b60008115159050919050565b6098816085565b811460a257600080fd5b50565b60008135905060b2816091565b92915050565b60006020828403121560cb5760ca6080565b5b600060d78482850160a5565b9150509291505056fea2646970667358221220f6bba001334fbb398dd9c6e6c017183b8692325dfe20ddeeb3cad9a53185c07164736f6c634300080a0033",
  "deployedBytecode": "0x608060405260043610601f5760003560e01c80634fea120c14604057603b565b36603b5760008054906101000a900460ff16603957600080fd5b005b600080fd5b348015604b57600080fd5b5060626004803603810190605e919060b8565b6064565b005b806000806101000a81548160ff02191690831515021790555050565b600080fd5b60008115159050919050565b6098816085565b811460a257600080fd5b50565b60008135905060b2816091565b92915050565b60006020828403121560cb5760ca6080565b5b600060d78482850160a5565b9150509291505056fea2646970667358221220f6bba001334fbb398dd9c6e6c017183b8692325dfe20ddeeb3cad9a53185c07164736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1017:166",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:166",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:166",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:166",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:166"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:166"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:166"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:166",
                "type": ""
              }
            ],
            "src": "7:75:166"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:166",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:166",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:166",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:166"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:166"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:166"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:166"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:166",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:166",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:166",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:166"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:166"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:166"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:166"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "376:48:166",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "386:32:166",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "411:5:166"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "404:6:166"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "404:13:166"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "397:6:166"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "397:21:166"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "386:7:166"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "358:5:166",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "368:7:166",
                "type": ""
              }
            ],
            "src": "334:90:166"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "470:76:166",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "524:16:166",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "533:1:166",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "536:1:166",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "526:6:166"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "526:12:166"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "526:12:166"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "493:5:166"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "515:5:166"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "500:14:166"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "500:21:166"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "490:2:166"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "490:32:166"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "483:6:166"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "483:40:166"
                  },
                  "nodeType": "YulIf",
                  "src": "480:60:166"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "463:5:166",
                "type": ""
              }
            ],
            "src": "430:116:166"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "601:84:166",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "611:29:166",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "633:6:166"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "620:12:166"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "620:20:166"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "611:5:166"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "673:5:166"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "649:23:166"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "649:30:166"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "649:30:166"
                }
              ]
            },
            "name": "abi_decode_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "579:6:166",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "587:3:166",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "595:5:166",
                "type": ""
              }
            ],
            "src": "552:133:166"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "754:260:166",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "800:83:166",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "802:77:166"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "802:79:166"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "802:79:166"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "775:7:166"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "784:9:166"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "771:3:166"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "771:23:166"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "796:2:166",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "767:3:166"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "767:32:166"
                  },
                  "nodeType": "YulIf",
                  "src": "764:119:166"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "893:114:166",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "908:15:166",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "922:1:166",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "912:6:166",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "937:60:166",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "969:9:166"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "980:6:166"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "965:3:166"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "965:22:166"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "989:7:166"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "947:17:166"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "947:50:166"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "937:6:166"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "724:9:166",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "735:7:166",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "747:6:166",
                "type": ""
              }
            ],
            "src": "691:323:166"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
      "id": 166,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "58:261:59:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "58:261:59:-:0;;;;;;;;;;;;;;;;;;;;;;;264:12;;;;;;;;;;259:52;;292:8;;;259:52;58:261;;;;;123:92;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;197:11;182:12;;:26;;;;;;;;;;;;;;;;;;123:92;:::o;88:117:166:-;197:1;194;187:12;334:90;368:7;411:5;404:13;397:21;386:32;;334:90;;;:::o;430:116::-;500:21;515:5;500:21;:::i;:::-;493:5;490:32;480:60;;536:1;533;526:12;480:60;430:116;:::o;552:133::-;595:5;633:6;620:20;611:29;;649:30;673:5;649:30;:::i;:::-;552:133;;;;:::o;691:323::-;747:6;796:2;784:9;775:7;771:23;767:32;764:119;;;802:79;;:::i;:::-;764:119;922:1;947:50;989:7;980:6;969:9;965:22;947:50;:::i;:::-;937:60;;893:114;691:323;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\ncontract EtherReceiverMock {\n    bool private _acceptEther;\n\n    function setAcceptEther(bool acceptEther) public {\n        _acceptEther = acceptEther;\n    }\n\n    receive () external payable {\n        if (!_acceptEther) {\n            revert();\n        }\n    }\n}\n",
  "sourcePath": "D:\\FYP\\FYP\\Dapp\\src\\contracts\\openzeppelin-contracts-4.1.0\\openzeppelin-contracts-4.1.0\\contracts\\mocks\\EtherReceiverMock.sol",
  "ast": {
    "absolutePath": "project:/src/contracts/openzeppelin-contracts-4.1.0/openzeppelin-contracts-4.1.0/contracts/mocks/EtherReceiverMock.sol",
    "exportedSymbols": {
      "EtherReceiverMock": [
        6263
      ]
    },
    "id": 6264,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6239,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:59"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "EtherReceiverMock",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 6263,
        "linearizedBaseContracts": [
          6263
        ],
        "name": "EtherReceiverMock",
        "nameLocation": "67:17:59",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6241,
            "mutability": "mutable",
            "name": "_acceptEther",
            "nameLocation": "104:12:59",
            "nodeType": "VariableDeclaration",
            "scope": 6263,
            "src": "91:25:59",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 6240,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "91:4:59",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 6250,
              "nodeType": "Block",
              "src": "172:43:59",
              "statements": [
                {
                  "expression": {
                    "id": 6248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6246,
                      "name": "_acceptEther",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6241,
                      "src": "182:12:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6247,
                      "name": "acceptEther",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6243,
                      "src": "197:11:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "182:26:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6249,
                  "nodeType": "ExpressionStatement",
                  "src": "182:26:59"
                }
              ]
            },
            "functionSelector": "4fea120c",
            "id": 6251,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAcceptEther",
            "nameLocation": "132:14:59",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6244,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6243,
                  "mutability": "mutable",
                  "name": "acceptEther",
                  "nameLocation": "152:11:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 6251,
                  "src": "147:16:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6242,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "147:4:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "146:18:59"
            },
            "returnParameters": {
              "id": 6245,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "172:0:59"
            },
            "scope": 6263,
            "src": "123:92:59",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6261,
              "nodeType": "Block",
              "src": "249:68:59",
              "statements": [
                {
                  "condition": {
                    "id": 6255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "263:13:59",
                    "subExpression": {
                      "id": 6254,
                      "name": "_acceptEther",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6241,
                      "src": "264:12:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6260,
                  "nodeType": "IfStatement",
                  "src": "259:52:59",
                  "trueBody": {
                    "id": 6259,
                    "nodeType": "Block",
                    "src": "278:33:59",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 6256,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967277,
                              4294967277
                            ],
                            "referencedDeclaration": 4294967277,
                            "src": "292:6:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 6257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "292:8:59",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 6258,
                        "nodeType": "ExpressionStatement",
                        "src": "292:8:59"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 6262,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6252,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "229:2:59"
            },
            "returnParameters": {
              "id": 6253,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "249:0:59"
            },
            "scope": 6263,
            "src": "221:96:59",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 6264,
        "src": "58:261:59",
        "usedErrors": []
      }
    ],
    "src": "33:287:59"
  },
  "legacyAST": {
    "absolutePath": "project:/src/contracts/openzeppelin-contracts-4.1.0/openzeppelin-contracts-4.1.0/contracts/mocks/EtherReceiverMock.sol",
    "exportedSymbols": {
      "EtherReceiverMock": [
        6263
      ]
    },
    "id": 6264,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6239,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:59"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "EtherReceiverMock",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 6263,
        "linearizedBaseContracts": [
          6263
        ],
        "name": "EtherReceiverMock",
        "nameLocation": "67:17:59",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6241,
            "mutability": "mutable",
            "name": "_acceptEther",
            "nameLocation": "104:12:59",
            "nodeType": "VariableDeclaration",
            "scope": 6263,
            "src": "91:25:59",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 6240,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "91:4:59",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 6250,
              "nodeType": "Block",
              "src": "172:43:59",
              "statements": [
                {
                  "expression": {
                    "id": 6248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6246,
                      "name": "_acceptEther",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6241,
                      "src": "182:12:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6247,
                      "name": "acceptEther",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6243,
                      "src": "197:11:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "182:26:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6249,
                  "nodeType": "ExpressionStatement",
                  "src": "182:26:59"
                }
              ]
            },
            "functionSelector": "4fea120c",
            "id": 6251,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAcceptEther",
            "nameLocation": "132:14:59",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6244,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6243,
                  "mutability": "mutable",
                  "name": "acceptEther",
                  "nameLocation": "152:11:59",
                  "nodeType": "VariableDeclaration",
                  "scope": 6251,
                  "src": "147:16:59",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6242,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "147:4:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "146:18:59"
            },
            "returnParameters": {
              "id": 6245,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "172:0:59"
            },
            "scope": 6263,
            "src": "123:92:59",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6261,
              "nodeType": "Block",
              "src": "249:68:59",
              "statements": [
                {
                  "condition": {
                    "id": 6255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "263:13:59",
                    "subExpression": {
                      "id": 6254,
                      "name": "_acceptEther",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6241,
                      "src": "264:12:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6260,
                  "nodeType": "IfStatement",
                  "src": "259:52:59",
                  "trueBody": {
                    "id": 6259,
                    "nodeType": "Block",
                    "src": "278:33:59",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 6256,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967277,
                              4294967277
                            ],
                            "referencedDeclaration": 4294967277,
                            "src": "292:6:59",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 6257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "292:8:59",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 6258,
                        "nodeType": "ExpressionStatement",
                        "src": "292:8:59"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 6262,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6252,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "229:2:59"
            },
            "returnParameters": {
              "id": 6253,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "249:0:59"
            },
            "scope": 6263,
            "src": "221:96:59",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 6264,
        "src": "58:261:59",
        "usedErrors": []
      }
    ],
    "src": "33:287:59"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-11-25T02:44:55.318Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}