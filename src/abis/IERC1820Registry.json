{
  "contractName": "IERC1820Registry",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "interfaceHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementer",
          "type": "address"
        }
      ],
      "name": "InterfaceImplementerSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newManager",
          "type": "address"
        }
      ],
      "name": "ManagerChanged",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "newManager",
          "type": "address"
        }
      ],
      "name": "setManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getManager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_interfaceHash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "implementer",
          "type": "address"
        }
      ],
      "name": "setInterfaceImplementer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_interfaceHash",
          "type": "bytes32"
        }
      ],
      "name": "getInterfaceImplementer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "interfaceName",
          "type": "string"
        }
      ],
      "name": "interfaceHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "updateERC165Cache",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "implementsERC165Interface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "implementsERC165InterfaceNoCache",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"interfaceHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementer\",\"type\":\"address\"}],\"name\":\"InterfaceImplementerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"ManagerChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_interfaceHash\",\"type\":\"bytes32\"}],\"name\":\"getInterfaceImplementer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"implementsERC165Interface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"implementsERC165InterfaceNoCache\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"interfaceName\",\"type\":\"string\"}],\"name\":\"interfaceHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_interfaceHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"implementer\",\"type\":\"address\"}],\"name\":\"setInterfaceImplementer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"setManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"updateERC165Cache\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the global ERC1820 Registry, as defined in the https://eips.ethereum.org/EIPS/eip-1820[EIP]. Accounts may register implementers for interfaces in this registry, as well as query support. Implementers may be shared by multiple accounts, and can also implement more than a single interface for each account. Contracts can implement interfaces for themselves, but externally-owned accounts (EOA) must delegate this to a contract. {IERC165} interfaces can also be queried via the registry. For an in-depth explanation and source code analysis, see the EIP text.\",\"kind\":\"dev\",\"methods\":{\"getInterfaceImplementer(address,bytes32)\":{\"details\":\"Returns the implementer of `interfaceHash` for `account`. If no such implementer is registered, returns the zero address. If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28 zeroes), `account` will be queried for support of it. `account` being the zero address is an alias for the caller's address.\"},\"getManager(address)\":{\"details\":\"Returns the manager for `account`. See {setManager}.\"},\"implementsERC165Interface(address,bytes4)\":{\"params\":{\"account\":\"Address of the contract to check.\",\"interfaceId\":\"ERC165 interface to check.\"},\"returns\":{\"_0\":\"True if `account` implements `interfaceId`, false otherwise.\"}},\"implementsERC165InterfaceNoCache(address,bytes4)\":{\"params\":{\"account\":\"Address of the contract to check.\",\"interfaceId\":\"ERC165 interface to check.\"},\"returns\":{\"_0\":\"True if `account` implements `interfaceId`, false otherwise.\"}},\"interfaceHash(string)\":{\"details\":\"Returns the interface hash for an `interfaceName`, as defined in the corresponding https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP].\"},\"setInterfaceImplementer(address,bytes32,address)\":{\"details\":\"Sets the `implementer` contract as ``account``'s implementer for `interfaceHash`. `account` being the zero address is an alias for the caller's address. The zero address can also be used in `implementer` to remove an old one. See {interfaceHash} to learn how these are created. Emits an {InterfaceImplementerSet} event. Requirements: - the caller must be the current manager for `account`. - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not end in 28 zeroes). - `implementer` must implement {IERC1820Implementer} and return true when queried for support, unless `implementer` is the caller. See {IERC1820Implementer-canImplementInterfaceForAddress}.\"},\"setManager(address,address)\":{\"details\":\"Sets `newManager` as the manager for `account`. A manager of an account is able to set interface implementers for it. By default, each account is its own manager. Passing a value of `0x0` in `newManager` will reset the manager to this initial state. Emits a {ManagerChanged} event. Requirements: - the caller must be the current manager for `account`.\"},\"updateERC165Cache(address,bytes4)\":{\"params\":{\"account\":\"Address of the contract for which to update the cache.\",\"interfaceId\":\"ERC165 interface for which to update the cache.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"implementsERC165Interface(address,bytes4)\":{\"notice\":\"Checks whether a contract implements an ERC165 interface or not. If the result is not cached a direct lookup on the contract address is performed. If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling {updateERC165Cache} with the contract address.\"},\"implementsERC165InterfaceNoCache(address,bytes4)\":{\"notice\":\"Checks whether a contract implements an ERC165 interface or not without using nor updating the cache.\"},\"updateERC165Cache(address,bytes4)\":{\"notice\":\"Updates the cache with whether the contract implements an ERC165 interface or not.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/src/contracts/openzeppelin-contracts-4.1.0/openzeppelin-contracts-4.1.0/contracts/utils/introspection/IERC1820Registry.sol\":\"IERC1820Registry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/src/contracts/openzeppelin-contracts-4.1.0/openzeppelin-contracts-4.1.0/contracts/utils/introspection/IERC1820Registry.sol\":{\"keccak256\":\"0xd2df74f95cc1d14b07a93d913993cf17285ee037e9bd1cac4ac4d38b846eaeda\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://836120f9dad7d6bfeebe0d80541ad8753286e132f80f134af618901eb98ecc89\",\"dweb:/ipfs/QmVWRvvX2kW8Des3SfB23UwYsiDrMd4aYRpwsjyu7FSVjA\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the global ERC1820 Registry, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1820[EIP]. Accounts may register\n * implementers for interfaces in this registry, as well as query support.\n *\n * Implementers may be shared by multiple accounts, and can also implement more\n * than a single interface for each account. Contracts can implement interfaces\n * for themselves, but externally-owned accounts (EOA) must delegate this to a\n * contract.\n *\n * {IERC165} interfaces can also be queried via the registry.\n *\n * For an in-depth explanation and source code analysis, see the EIP text.\n */\ninterface IERC1820Registry {\n    /**\n     * @dev Sets `newManager` as the manager for `account`. A manager of an\n     * account is able to set interface implementers for it.\n     *\n     * By default, each account is its own manager. Passing a value of `0x0` in\n     * `newManager` will reset the manager to this initial state.\n     *\n     * Emits a {ManagerChanged} event.\n     *\n     * Requirements:\n     *\n     * - the caller must be the current manager for `account`.\n     */\n    function setManager(address account, address newManager) external;\n\n    /**\n     * @dev Returns the manager for `account`.\n     *\n     * See {setManager}.\n     */\n    function getManager(address account) external view returns (address);\n\n    /**\n     * @dev Sets the `implementer` contract as ``account``'s implementer for\n     * `interfaceHash`.\n     *\n     * `account` being the zero address is an alias for the caller's address.\n     * The zero address can also be used in `implementer` to remove an old one.\n     *\n     * See {interfaceHash} to learn how these are created.\n     *\n     * Emits an {InterfaceImplementerSet} event.\n     *\n     * Requirements:\n     *\n     * - the caller must be the current manager for `account`.\n     * - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not\n     * end in 28 zeroes).\n     * - `implementer` must implement {IERC1820Implementer} and return true when\n     * queried for support, unless `implementer` is the caller. See\n     * {IERC1820Implementer-canImplementInterfaceForAddress}.\n     */\n    function setInterfaceImplementer(address account, bytes32 _interfaceHash, address implementer) external;\n\n    /**\n     * @dev Returns the implementer of `interfaceHash` for `account`. If no such\n     * implementer is registered, returns the zero address.\n     *\n     * If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28\n     * zeroes), `account` will be queried for support of it.\n     *\n     * `account` being the zero address is an alias for the caller's address.\n     */\n    function getInterfaceImplementer(address account, bytes32 _interfaceHash) external view returns (address);\n\n    /**\n     * @dev Returns the interface hash for an `interfaceName`, as defined in the\n     * corresponding\n     * https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP].\n     */\n    function interfaceHash(string calldata interfaceName) external pure returns (bytes32);\n\n    /**\n     * @notice Updates the cache with whether the contract implements an ERC165 interface or not.\n     * @param account Address of the contract for which to update the cache.\n     * @param interfaceId ERC165 interface for which to update the cache.\n     */\n    function updateERC165Cache(address account, bytes4 interfaceId) external;\n\n    /**\n     * @notice Checks whether a contract implements an ERC165 interface or not.\n     * If the result is not cached a direct lookup on the contract address is performed.\n     * If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling\n     * {updateERC165Cache} with the contract address.\n     * @param account Address of the contract to check.\n     * @param interfaceId ERC165 interface to check.\n     * @return True if `account` implements `interfaceId`, false otherwise.\n     */\n    function implementsERC165Interface(address account, bytes4 interfaceId) external view returns (bool);\n\n    /**\n     * @notice Checks whether a contract implements an ERC165 interface or not without using nor updating the cache.\n     * @param account Address of the contract to check.\n     * @param interfaceId ERC165 interface to check.\n     * @return True if `account` implements `interfaceId`, false otherwise.\n     */\n    function implementsERC165InterfaceNoCache(address account, bytes4 interfaceId) external view returns (bool);\n\n    event InterfaceImplementerSet(address indexed account, bytes32 indexed interfaceHash, address indexed implementer);\n\n    event ManagerChanged(address indexed account, address indexed newManager);\n}\n",
  "sourcePath": "D:\\FYP\\FYP\\Dapp\\src\\contracts\\openzeppelin-contracts-4.1.0\\openzeppelin-contracts-4.1.0\\contracts\\utils\\introspection\\IERC1820Registry.sol",
  "ast": {
    "absolutePath": "project:/src/contracts/openzeppelin-contracts-4.1.0/openzeppelin-contracts-4.1.0/contracts/utils/introspection/IERC1820Registry.sol",
    "exportedSymbols": {
      "IERC1820Registry": [
        18423
      ]
    },
    "id": 18424,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 18335,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:156"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IERC1820Registry",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 18336,
          "nodeType": "StructuredDocumentation",
          "src": "58:619:156",
          "text": " @dev Interface of the global ERC1820 Registry, as defined in the\n https://eips.ethereum.org/EIPS/eip-1820[EIP]. Accounts may register\n implementers for interfaces in this registry, as well as query support.\n Implementers may be shared by multiple accounts, and can also implement more\n than a single interface for each account. Contracts can implement interfaces\n for themselves, but externally-owned accounts (EOA) must delegate this to a\n contract.\n {IERC165} interfaces can also be queried via the registry.\n For an in-depth explanation and source code analysis, see the EIP text."
        },
        "fullyImplemented": false,
        "id": 18423,
        "linearizedBaseContracts": [
          18423
        ],
        "name": "IERC1820Registry",
        "nameLocation": "688:16:156",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 18337,
              "nodeType": "StructuredDocumentation",
              "src": "711:445:156",
              "text": " @dev Sets `newManager` as the manager for `account`. A manager of an\n account is able to set interface implementers for it.\n By default, each account is its own manager. Passing a value of `0x0` in\n `newManager` will reset the manager to this initial state.\n Emits a {ManagerChanged} event.\n Requirements:\n - the caller must be the current manager for `account`."
            },
            "functionSelector": "5df8122f",
            "id": 18344,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setManager",
            "nameLocation": "1170:10:156",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18342,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18339,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1189:7:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 18344,
                  "src": "1181:15:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18338,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1181:7:156",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18341,
                  "mutability": "mutable",
                  "name": "newManager",
                  "nameLocation": "1206:10:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 18344,
                  "src": "1198:18:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18340,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1198:7:156",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1180:37:156"
            },
            "returnParameters": {
              "id": 18343,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1226:0:156"
            },
            "scope": 18423,
            "src": "1161:66:156",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 18345,
              "nodeType": "StructuredDocumentation",
              "src": "1233:90:156",
              "text": " @dev Returns the manager for `account`.\n See {setManager}."
            },
            "functionSelector": "3d584063",
            "id": 18352,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getManager",
            "nameLocation": "1337:10:156",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18347,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1356:7:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 18352,
                  "src": "1348:15:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18346,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1348:7:156",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1347:17:156"
            },
            "returnParameters": {
              "id": 18351,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18350,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18352,
                  "src": "1388:7:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18349,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1388:7:156",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1387:9:156"
            },
            "scope": 18423,
            "src": "1328:69:156",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 18353,
              "nodeType": "StructuredDocumentation",
              "src": "1403:815:156",
              "text": " @dev Sets the `implementer` contract as ``account``'s implementer for\n `interfaceHash`.\n `account` being the zero address is an alias for the caller's address.\n The zero address can also be used in `implementer` to remove an old one.\n See {interfaceHash} to learn how these are created.\n Emits an {InterfaceImplementerSet} event.\n Requirements:\n - the caller must be the current manager for `account`.\n - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not\n end in 28 zeroes).\n - `implementer` must implement {IERC1820Implementer} and return true when\n queried for support, unless `implementer` is the caller. See\n {IERC1820Implementer-canImplementInterfaceForAddress}."
            },
            "functionSelector": "29965a1d",
            "id": 18362,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setInterfaceImplementer",
            "nameLocation": "2232:23:156",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18360,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18355,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2264:7:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 18362,
                  "src": "2256:15:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18354,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2256:7:156",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18357,
                  "mutability": "mutable",
                  "name": "_interfaceHash",
                  "nameLocation": "2281:14:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 18362,
                  "src": "2273:22:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 18356,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2273:7:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18359,
                  "mutability": "mutable",
                  "name": "implementer",
                  "nameLocation": "2305:11:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 18362,
                  "src": "2297:19:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18358,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2297:7:156",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2255:62:156"
            },
            "returnParameters": {
              "id": 18361,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2326:0:156"
            },
            "scope": 18423,
            "src": "2223:104:156",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 18363,
              "nodeType": "StructuredDocumentation",
              "src": "2333:382:156",
              "text": " @dev Returns the implementer of `interfaceHash` for `account`. If no such\n implementer is registered, returns the zero address.\n If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28\n zeroes), `account` will be queried for support of it.\n `account` being the zero address is an alias for the caller's address."
            },
            "functionSelector": "aabbb8ca",
            "id": 18372,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getInterfaceImplementer",
            "nameLocation": "2729:23:156",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18365,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2761:7:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 18372,
                  "src": "2753:15:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18364,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2753:7:156",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18367,
                  "mutability": "mutable",
                  "name": "_interfaceHash",
                  "nameLocation": "2778:14:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 18372,
                  "src": "2770:22:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 18366,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2770:7:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2752:41:156"
            },
            "returnParameters": {
              "id": 18371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18370,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18372,
                  "src": "2817:7:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18369,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2817:7:156",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2816:9:156"
            },
            "scope": 18423,
            "src": "2720:106:156",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 18373,
              "nodeType": "StructuredDocumentation",
              "src": "2832:196:156",
              "text": " @dev Returns the interface hash for an `interfaceName`, as defined in the\n corresponding\n https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP]."
            },
            "functionSelector": "65ba36c1",
            "id": 18380,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "interfaceHash",
            "nameLocation": "3042:13:156",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18376,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18375,
                  "mutability": "mutable",
                  "name": "interfaceName",
                  "nameLocation": "3072:13:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 18380,
                  "src": "3056:29:156",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 18374,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3056:6:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3055:31:156"
            },
            "returnParameters": {
              "id": 18379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18378,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18380,
                  "src": "3110:7:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 18377,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3110:7:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3109:9:156"
            },
            "scope": 18423,
            "src": "3033:86:156",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 18381,
              "nodeType": "StructuredDocumentation",
              "src": "3125:260:156",
              "text": " @notice Updates the cache with whether the contract implements an ERC165 interface or not.\n @param account Address of the contract for which to update the cache.\n @param interfaceId ERC165 interface for which to update the cache."
            },
            "functionSelector": "a41e7d51",
            "id": 18388,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateERC165Cache",
            "nameLocation": "3399:17:156",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18386,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18383,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3425:7:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 18388,
                  "src": "3417:15:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18382,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3417:7:156",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18385,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "3441:11:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 18388,
                  "src": "3434:18:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 18384,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3434:6:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3416:37:156"
            },
            "returnParameters": {
              "id": 18387,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3462:0:156"
            },
            "scope": 18423,
            "src": "3390:73:156",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 18389,
              "nodeType": "StructuredDocumentation",
              "src": "3469:536:156",
              "text": " @notice Checks whether a contract implements an ERC165 interface or not.\n If the result is not cached a direct lookup on the contract address is performed.\n If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling\n {updateERC165Cache} with the contract address.\n @param account Address of the contract to check.\n @param interfaceId ERC165 interface to check.\n @return True if `account` implements `interfaceId`, false otherwise."
            },
            "functionSelector": "f712f3e8",
            "id": 18398,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "implementsERC165Interface",
            "nameLocation": "4019:25:156",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18394,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18391,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4053:7:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 18398,
                  "src": "4045:15:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18390,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4045:7:156",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18393,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "4069:11:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 18398,
                  "src": "4062:18:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 18392,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4062:6:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4044:37:156"
            },
            "returnParameters": {
              "id": 18397,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18396,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18398,
                  "src": "4105:4:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 18395,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4105:4:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4104:6:156"
            },
            "scope": 18423,
            "src": "4010:101:156",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 18399,
              "nodeType": "StructuredDocumentation",
              "src": "4117:313:156",
              "text": " @notice Checks whether a contract implements an ERC165 interface or not without using nor updating the cache.\n @param account Address of the contract to check.\n @param interfaceId ERC165 interface to check.\n @return True if `account` implements `interfaceId`, false otherwise."
            },
            "functionSelector": "b7056765",
            "id": 18408,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "implementsERC165InterfaceNoCache",
            "nameLocation": "4444:32:156",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18404,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18401,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4485:7:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 18408,
                  "src": "4477:15:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18400,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4477:7:156",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18403,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "4501:11:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 18408,
                  "src": "4494:18:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 18402,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4494:6:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4476:37:156"
            },
            "returnParameters": {
              "id": 18407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18406,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18408,
                  "src": "4537:4:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 18405,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4537:4:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4536:6:156"
            },
            "scope": 18423,
            "src": "4435:108:156",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 18416,
            "name": "InterfaceImplementerSet",
            "nameLocation": "4555:23:156",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 18415,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18410,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4595:7:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 18416,
                  "src": "4579:23:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18409,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4579:7:156",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18412,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "interfaceHash",
                  "nameLocation": "4620:13:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 18416,
                  "src": "4604:29:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 18411,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4604:7:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18414,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "implementer",
                  "nameLocation": "4651:11:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 18416,
                  "src": "4635:27:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18413,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4635:7:156",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4578:85:156"
            },
            "src": "4549:115:156"
          },
          {
            "anonymous": false,
            "id": 18422,
            "name": "ManagerChanged",
            "nameLocation": "4676:14:156",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 18421,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18418,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4707:7:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 18422,
                  "src": "4691:23:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18417,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4691:7:156",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18420,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newManager",
                  "nameLocation": "4732:10:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 18422,
                  "src": "4716:26:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18419,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4716:7:156",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4690:53:156"
            },
            "src": "4670:74:156"
          }
        ],
        "scope": 18424,
        "src": "678:4068:156",
        "usedErrors": []
      }
    ],
    "src": "33:4714:156"
  },
  "legacyAST": {
    "absolutePath": "project:/src/contracts/openzeppelin-contracts-4.1.0/openzeppelin-contracts-4.1.0/contracts/utils/introspection/IERC1820Registry.sol",
    "exportedSymbols": {
      "IERC1820Registry": [
        18423
      ]
    },
    "id": 18424,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 18335,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:156"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IERC1820Registry",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 18336,
          "nodeType": "StructuredDocumentation",
          "src": "58:619:156",
          "text": " @dev Interface of the global ERC1820 Registry, as defined in the\n https://eips.ethereum.org/EIPS/eip-1820[EIP]. Accounts may register\n implementers for interfaces in this registry, as well as query support.\n Implementers may be shared by multiple accounts, and can also implement more\n than a single interface for each account. Contracts can implement interfaces\n for themselves, but externally-owned accounts (EOA) must delegate this to a\n contract.\n {IERC165} interfaces can also be queried via the registry.\n For an in-depth explanation and source code analysis, see the EIP text."
        },
        "fullyImplemented": false,
        "id": 18423,
        "linearizedBaseContracts": [
          18423
        ],
        "name": "IERC1820Registry",
        "nameLocation": "688:16:156",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 18337,
              "nodeType": "StructuredDocumentation",
              "src": "711:445:156",
              "text": " @dev Sets `newManager` as the manager for `account`. A manager of an\n account is able to set interface implementers for it.\n By default, each account is its own manager. Passing a value of `0x0` in\n `newManager` will reset the manager to this initial state.\n Emits a {ManagerChanged} event.\n Requirements:\n - the caller must be the current manager for `account`."
            },
            "functionSelector": "5df8122f",
            "id": 18344,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setManager",
            "nameLocation": "1170:10:156",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18342,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18339,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1189:7:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 18344,
                  "src": "1181:15:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18338,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1181:7:156",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18341,
                  "mutability": "mutable",
                  "name": "newManager",
                  "nameLocation": "1206:10:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 18344,
                  "src": "1198:18:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18340,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1198:7:156",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1180:37:156"
            },
            "returnParameters": {
              "id": 18343,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1226:0:156"
            },
            "scope": 18423,
            "src": "1161:66:156",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 18345,
              "nodeType": "StructuredDocumentation",
              "src": "1233:90:156",
              "text": " @dev Returns the manager for `account`.\n See {setManager}."
            },
            "functionSelector": "3d584063",
            "id": 18352,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getManager",
            "nameLocation": "1337:10:156",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18347,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1356:7:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 18352,
                  "src": "1348:15:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18346,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1348:7:156",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1347:17:156"
            },
            "returnParameters": {
              "id": 18351,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18350,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18352,
                  "src": "1388:7:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18349,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1388:7:156",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1387:9:156"
            },
            "scope": 18423,
            "src": "1328:69:156",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 18353,
              "nodeType": "StructuredDocumentation",
              "src": "1403:815:156",
              "text": " @dev Sets the `implementer` contract as ``account``'s implementer for\n `interfaceHash`.\n `account` being the zero address is an alias for the caller's address.\n The zero address can also be used in `implementer` to remove an old one.\n See {interfaceHash} to learn how these are created.\n Emits an {InterfaceImplementerSet} event.\n Requirements:\n - the caller must be the current manager for `account`.\n - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not\n end in 28 zeroes).\n - `implementer` must implement {IERC1820Implementer} and return true when\n queried for support, unless `implementer` is the caller. See\n {IERC1820Implementer-canImplementInterfaceForAddress}."
            },
            "functionSelector": "29965a1d",
            "id": 18362,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setInterfaceImplementer",
            "nameLocation": "2232:23:156",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18360,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18355,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2264:7:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 18362,
                  "src": "2256:15:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18354,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2256:7:156",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18357,
                  "mutability": "mutable",
                  "name": "_interfaceHash",
                  "nameLocation": "2281:14:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 18362,
                  "src": "2273:22:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 18356,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2273:7:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18359,
                  "mutability": "mutable",
                  "name": "implementer",
                  "nameLocation": "2305:11:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 18362,
                  "src": "2297:19:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18358,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2297:7:156",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2255:62:156"
            },
            "returnParameters": {
              "id": 18361,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2326:0:156"
            },
            "scope": 18423,
            "src": "2223:104:156",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 18363,
              "nodeType": "StructuredDocumentation",
              "src": "2333:382:156",
              "text": " @dev Returns the implementer of `interfaceHash` for `account`. If no such\n implementer is registered, returns the zero address.\n If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28\n zeroes), `account` will be queried for support of it.\n `account` being the zero address is an alias for the caller's address."
            },
            "functionSelector": "aabbb8ca",
            "id": 18372,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getInterfaceImplementer",
            "nameLocation": "2729:23:156",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18365,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2761:7:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 18372,
                  "src": "2753:15:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18364,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2753:7:156",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18367,
                  "mutability": "mutable",
                  "name": "_interfaceHash",
                  "nameLocation": "2778:14:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 18372,
                  "src": "2770:22:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 18366,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2770:7:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2752:41:156"
            },
            "returnParameters": {
              "id": 18371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18370,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18372,
                  "src": "2817:7:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18369,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2817:7:156",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2816:9:156"
            },
            "scope": 18423,
            "src": "2720:106:156",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 18373,
              "nodeType": "StructuredDocumentation",
              "src": "2832:196:156",
              "text": " @dev Returns the interface hash for an `interfaceName`, as defined in the\n corresponding\n https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP]."
            },
            "functionSelector": "65ba36c1",
            "id": 18380,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "interfaceHash",
            "nameLocation": "3042:13:156",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18376,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18375,
                  "mutability": "mutable",
                  "name": "interfaceName",
                  "nameLocation": "3072:13:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 18380,
                  "src": "3056:29:156",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 18374,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3056:6:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3055:31:156"
            },
            "returnParameters": {
              "id": 18379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18378,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18380,
                  "src": "3110:7:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 18377,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3110:7:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3109:9:156"
            },
            "scope": 18423,
            "src": "3033:86:156",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 18381,
              "nodeType": "StructuredDocumentation",
              "src": "3125:260:156",
              "text": " @notice Updates the cache with whether the contract implements an ERC165 interface or not.\n @param account Address of the contract for which to update the cache.\n @param interfaceId ERC165 interface for which to update the cache."
            },
            "functionSelector": "a41e7d51",
            "id": 18388,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateERC165Cache",
            "nameLocation": "3399:17:156",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18386,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18383,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3425:7:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 18388,
                  "src": "3417:15:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18382,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3417:7:156",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18385,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "3441:11:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 18388,
                  "src": "3434:18:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 18384,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3434:6:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3416:37:156"
            },
            "returnParameters": {
              "id": 18387,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3462:0:156"
            },
            "scope": 18423,
            "src": "3390:73:156",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 18389,
              "nodeType": "StructuredDocumentation",
              "src": "3469:536:156",
              "text": " @notice Checks whether a contract implements an ERC165 interface or not.\n If the result is not cached a direct lookup on the contract address is performed.\n If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling\n {updateERC165Cache} with the contract address.\n @param account Address of the contract to check.\n @param interfaceId ERC165 interface to check.\n @return True if `account` implements `interfaceId`, false otherwise."
            },
            "functionSelector": "f712f3e8",
            "id": 18398,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "implementsERC165Interface",
            "nameLocation": "4019:25:156",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18394,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18391,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4053:7:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 18398,
                  "src": "4045:15:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18390,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4045:7:156",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18393,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "4069:11:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 18398,
                  "src": "4062:18:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 18392,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4062:6:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4044:37:156"
            },
            "returnParameters": {
              "id": 18397,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18396,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18398,
                  "src": "4105:4:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 18395,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4105:4:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4104:6:156"
            },
            "scope": 18423,
            "src": "4010:101:156",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 18399,
              "nodeType": "StructuredDocumentation",
              "src": "4117:313:156",
              "text": " @notice Checks whether a contract implements an ERC165 interface or not without using nor updating the cache.\n @param account Address of the contract to check.\n @param interfaceId ERC165 interface to check.\n @return True if `account` implements `interfaceId`, false otherwise."
            },
            "functionSelector": "b7056765",
            "id": 18408,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "implementsERC165InterfaceNoCache",
            "nameLocation": "4444:32:156",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18404,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18401,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4485:7:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 18408,
                  "src": "4477:15:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18400,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4477:7:156",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18403,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "4501:11:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 18408,
                  "src": "4494:18:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 18402,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4494:6:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4476:37:156"
            },
            "returnParameters": {
              "id": 18407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18406,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18408,
                  "src": "4537:4:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 18405,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4537:4:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4536:6:156"
            },
            "scope": 18423,
            "src": "4435:108:156",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 18416,
            "name": "InterfaceImplementerSet",
            "nameLocation": "4555:23:156",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 18415,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18410,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4595:7:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 18416,
                  "src": "4579:23:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18409,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4579:7:156",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18412,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "interfaceHash",
                  "nameLocation": "4620:13:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 18416,
                  "src": "4604:29:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 18411,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4604:7:156",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18414,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "implementer",
                  "nameLocation": "4651:11:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 18416,
                  "src": "4635:27:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18413,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4635:7:156",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4578:85:156"
            },
            "src": "4549:115:156"
          },
          {
            "anonymous": false,
            "id": 18422,
            "name": "ManagerChanged",
            "nameLocation": "4676:14:156",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 18421,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18418,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4707:7:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 18422,
                  "src": "4691:23:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18417,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4691:7:156",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18420,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newManager",
                  "nameLocation": "4732:10:156",
                  "nodeType": "VariableDeclaration",
                  "scope": 18422,
                  "src": "4716:26:156",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18419,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4716:7:156",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4690:53:156"
            },
            "src": "4670:74:156"
          }
        ],
        "scope": 18424,
        "src": "678:4068:156",
        "usedErrors": []
      }
    ],
    "src": "33:4714:156"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-11-25T02:44:56.496Z",
  "devdoc": {
    "details": "Interface of the global ERC1820 Registry, as defined in the https://eips.ethereum.org/EIPS/eip-1820[EIP]. Accounts may register implementers for interfaces in this registry, as well as query support. Implementers may be shared by multiple accounts, and can also implement more than a single interface for each account. Contracts can implement interfaces for themselves, but externally-owned accounts (EOA) must delegate this to a contract. {IERC165} interfaces can also be queried via the registry. For an in-depth explanation and source code analysis, see the EIP text.",
    "kind": "dev",
    "methods": {
      "getInterfaceImplementer(address,bytes32)": {
        "details": "Returns the implementer of `interfaceHash` for `account`. If no such implementer is registered, returns the zero address. If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28 zeroes), `account` will be queried for support of it. `account` being the zero address is an alias for the caller's address."
      },
      "getManager(address)": {
        "details": "Returns the manager for `account`. See {setManager}."
      },
      "implementsERC165Interface(address,bytes4)": {
        "params": {
          "account": "Address of the contract to check.",
          "interfaceId": "ERC165 interface to check."
        },
        "returns": {
          "_0": "True if `account` implements `interfaceId`, false otherwise."
        }
      },
      "implementsERC165InterfaceNoCache(address,bytes4)": {
        "params": {
          "account": "Address of the contract to check.",
          "interfaceId": "ERC165 interface to check."
        },
        "returns": {
          "_0": "True if `account` implements `interfaceId`, false otherwise."
        }
      },
      "interfaceHash(string)": {
        "details": "Returns the interface hash for an `interfaceName`, as defined in the corresponding https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP]."
      },
      "setInterfaceImplementer(address,bytes32,address)": {
        "details": "Sets the `implementer` contract as ``account``'s implementer for `interfaceHash`. `account` being the zero address is an alias for the caller's address. The zero address can also be used in `implementer` to remove an old one. See {interfaceHash} to learn how these are created. Emits an {InterfaceImplementerSet} event. Requirements: - the caller must be the current manager for `account`. - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not end in 28 zeroes). - `implementer` must implement {IERC1820Implementer} and return true when queried for support, unless `implementer` is the caller. See {IERC1820Implementer-canImplementInterfaceForAddress}."
      },
      "setManager(address,address)": {
        "details": "Sets `newManager` as the manager for `account`. A manager of an account is able to set interface implementers for it. By default, each account is its own manager. Passing a value of `0x0` in `newManager` will reset the manager to this initial state. Emits a {ManagerChanged} event. Requirements: - the caller must be the current manager for `account`."
      },
      "updateERC165Cache(address,bytes4)": {
        "params": {
          "account": "Address of the contract for which to update the cache.",
          "interfaceId": "ERC165 interface for which to update the cache."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "implementsERC165Interface(address,bytes4)": {
        "notice": "Checks whether a contract implements an ERC165 interface or not. If the result is not cached a direct lookup on the contract address is performed. If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling {updateERC165Cache} with the contract address."
      },
      "implementsERC165InterfaceNoCache(address,bytes4)": {
        "notice": "Checks whether a contract implements an ERC165 interface or not without using nor updating the cache."
      },
      "updateERC165Cache(address,bytes4)": {
        "notice": "Updates the cache with whether the contract implements an ERC165 interface or not."
      }
    },
    "version": 1
  }
}